name: release-gh-notes

on:
  workflow_call:
    inputs:
      version:
        required: true
        description: "Specify the version for this release"
        type: string
      npm_package:
        required: true
        description: "npm package of the release repo"
        type: string
      # repo:
      #   required: true
      #   description: "repo to release to"
      #   type: string

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: install with retry
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 5
          command: npm install ${{ github.event.inputs.npm_package}}@${{ github.event.inputs.version }}
          on_retry_command: sleep 60s
      - name: Get manifest file
        id: manifest
        run: echo ::set-output name=manifest::$(cat node_modules/${{ github.event.inputs.npm_package }}/package.json)
        shell: bash
      - name: echo file
        run: echo ${{ steps.manifest.outputs.manifest }}
        shell: bash
      - name: echo commit
        run: echo ${{ fromJson(steps.manifest.outputs.manifest).version }}
        shell: bash
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: "abdhalees/components"
          ref: main
          fetch-depth: 0
      - name: Get current tag
        id: vars2
        run: echo ::set-output name=current_tag::$(git describe --tags `git rev-list --tags --max-count=1`)
        shell: bash
      - run: git checkout 7aef8d62ae852d082edc5ede1fc94d4d6ee4d4fe
      - name: Generate Changelog
        run: npx conventional-changelog-cli -i CHANGELOG.md -s -p conventionalcommits
      - name: remove version number from body
        run: sed -i.bak 's/[0-9].[0-9].[0-9]/${{ fromJson(steps.manifest.outputs.manifest).version }}/' CHANGELOG.md && sed -i.bak 's/v[0-9].[0-9].[0-9]/${{ steps.vars2.outputs.current_tag }}/2' CHANGELOG.md && sed -i.bak 's/v[0-9].[0-9].[0-9]/${{ fromJson(steps.manifest.outputs.manifest).version }}/3' CHANGELOG.md
        shell: bash

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitish: 7aef8d62ae852d082edc5ede1fc94d4d6ee4d4fe
          tag_name: ${{ fromJson(steps.manifest.outputs.manifest).version }}
          release_name: Release ${{ fromJson(steps.manifest.outputs.manifest).version }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md
          owner: abdhalees
          repo: components
