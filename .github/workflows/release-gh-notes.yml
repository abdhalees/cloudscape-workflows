name: release-gh-notes

on:
  workflow_call:
    inputs:
      # tag:
      #   required: true
      #   description: "Specify the tag for this release"
      #   type: string
      npm_package:
        required: true
        description: "npm package of the release repo"
        type: string
      # repo:
      #   required: true
      #   description: "repo to release to"
      #   type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Install npm package
        run: npm install ${{ github.event.input.npm_package}}
      - name: Get manifest file
        id: vars
        run: echo ::set-output name=manifest::$(cat node_modules/${{ github.event.input.npm_package }}/package.json)
      - name: Get commit
        id: vars
        run: echo ::set-output name=commit::$(${{ fromJson(steps.vars.manifest).commit }})
      - name: echo commit
        run: echo ${ {steps.vars.commit }}
      # - name: Checkout
      #   uses: actions/checkout@v3
      #   with:
      #     ref: main
      #     fetch-depth: 0
      # - name: Save full commit SHA
      #   id: vars
      #   run: echo ::set-output name=sha_long::$(git rev-parse ${{ github.event.inputs.sha }})
      #   shell: bash
      # - name: Get current tag
      #   id: vars2
      #   run: echo ::set-output name=current_tag::$(git describe --tags `git rev-list --tags --max-count=1`)
      #   shell: bash
      # - run: git checkout ${{ steps.vars.outputs.sha_long }}
      # - name: Generate Changelog
      #   run: npx conventional-changelog-cli -i CHANGELOG.md -s -p conventionalcommits
      # - name: remove version number from body
      #   run: sed -i.bak 's/[0-9].[0-9].[0-9]/${{ github.event.inputs.tag }}/' CHANGELOG.md && sed -i.bak 's/v[0-9].[0-9].[0-9]/${{ steps.vars2.outputs.current_tag }}/2' CHANGELOG.md && sed -i.bak 's/v[0-9].[0-9].[0-9]/${{ github.event.inputs.tag }}/3' CHANGELOG.md
      #   shell: bash

      # - name: Create Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     commitish: ${{ steps.vars.outputs.sha_long }}
      #     tag_name: ${{ github.event.inputs.tag }}
      #     release_name: Release ${{ github.event.inputs.tag }}
      #     draft: false
      #     prerelease: false
      #     body_path: CHANGELOG.md
